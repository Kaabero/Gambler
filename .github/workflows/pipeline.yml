name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install backend's dependencies
        working-directory: backend
        run: npm install
      - name: Install frontend's dependencies
        working-directory: gambler
        run: npm install
      - name: lint backend
        working-directory: backend 
        run: npm run lint
      - name: lint frontend
        working-directory: gambler 
        run: npm run lint
      - name: test backend
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
        working-directory: backend 
        run: npm run test
      - name: build
        working-directory: gambler 
        run: npm run build:ui

      

      - name: Trigger deployment
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ''), '#skip') }}
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
  test_e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install wait-on globally
        run: npm install -g wait-on
      - name: Install backend dependencies
        working-directory: backend
        run: npm install
      - name: Install frontend dependencies
        working-directory: gambler
        run: npm install
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start Backend
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
        run: |
          npm run test:e2e --prefix backend &
          sleep 5
          curl http://localhost:3001 || echo "Backend not responding"
          npx wait-on http://localhost:3001
        
      - name: Start Frontend
        run: npm run dev --prefix gambler &
      
      - name: Wait for Backend and Frontend
        run: |
          npx wait-on http://localhost:3001
          npx wait-on http://localhost:5173

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
       


